name: Build C++ Application

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    # 1. Скачиваем код
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Устанавливаем среду MSYS2 и компилятор MinGW-w64 (более надежный способ)
    - name: Setup MSYS2 and MinGW
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: mingw-w64-x86_64-gcc # Нам нужен только компилятор

    # 3. Компилируем приложение.
    # 'shell: msys2 {0}' указывает, что команду нужно выполнять внутри
    # установленной среды MSYS2, чтобы найти компилятор g++.
    - name: Compile Application
      shell: msys2 {0}
      run: |
        g++ -o yt-dlp-gui.exe main.cpp resource.h -mwindows -lcomctl32 -lshell32 -static -std=c++17 -Wl,-subsystem,windows

    # 4. Упаковываем .exe в .zip архив
    # Этот шаг выполняется уже в обычной среде Windows (powershell)
    - name: Create Release Artifact
      run: Compress-Archive -Path yt-dlp-gui.exe -DestinationPath yt-dlp-gui.zip

    # 5. Создаём или обновляем релиз 'latest' на GitHub
    - name: Create or Update Release
      uses: softprops/action-gh-release@v2
      with:
        files: yt-dlp-gui.zip
        tag_name: latest
        prerelease: false
        make_latest: true
